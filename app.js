// AgroSakha Application Data and Logic
const APP_DATA = {
  villages: [
    { name: 'Harda', population: 45000 },
    { name: 'Khirkiya', population: 12000 },
    { name: 'Timarni', population: 8500 },
    { name: 'Sirali', population: 6200 },
    { name: 'Rehtakhedi', population: 5800 },
    { name: 'Handiya', population: 7100 },
    { name: 'Satwas', population: 4900 },
    { name: 'Chainpur', population: 5500 }
  ],
  
  weatherForecast: [
    { day: 'Today', maxTemp: 38, minTemp: 26, condition: 'Partly Cloudy', rain: 20, icon: 'тЫЕ' },
    { day: 'Tomorrow', maxTemp: 39, minTemp: 27, condition: 'Sunny', rain: 10, icon: 'тШАя╕П' },
    { day: 'Day 3', maxTemp: 40, minTemp: 28, condition: 'Sunny', rain: 5, icon: 'тШАя╕П' },
    { day: 'Day 4', maxTemp: 37, minTemp: 26, condition: 'Thunderstorms', rain: 80, icon: 'тЫИя╕П' },
    { day: 'Day 5', maxTemp: 35, minTemp: 24, condition: 'Rain', rain: 90, icon: 'ЁЯМзя╕П' },
    { day: 'Day 6', maxTemp: 34, minTemp: 23, condition: 'Cloudy', rain: 60, icon: 'тШБя╕П' },
    { day: 'Day 7', maxTemp: 36, minTemp: 25, condition: 'Partly Cloudy', rain: 30, icon: 'тЫЕ' }
  ],
  
  notifications: [
    {
      id: 1,
      type: 'weather',
      priority: 'high',
      time: '2025-10-25 08:30 AM',
      message_en: 'Heavy rainfall alert for Harda on 28th Oct. Secure your crops and ensure proper drainage.',
      message_hi: '28 рдЕрдХреНрдЯреВрдмрд░ рдХреЛ рд╣рд░рджрд╛ рдореЗрдВ рднрд╛рд░реА рдмрд╛рд░рд┐рд╢ рдХреА рдЪреЗрддрд╛рд╡рдиреАред рдЕрдкрдиреА рдлрд╕рд▓реЛрдВ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рдХрд░реЗрдВред'
    },
    {
      id: 2,
      type: 'pest',
      priority: 'medium',
      time: '2025-10-24 06:15 PM',
      message_en: 'Bollworm infestation reported in cotton crops near Khirkiya. Check your fields.',
      message_hi: 'рдЦрд┐рд░рдХрд┐рдпрд╛ рдХреЗ рдкрд╛рд╕ рдХрдкрд╛рд╕ рдореЗрдВ рдЧреБрд▓рд╛рдмреА рд╕реБрдВрдбреА рдХрд╛ рдкреНрд░рдХреЛрдкред рдЕрдкрдиреЗ рдЦреЗрдд рдХреА рдЬрд╛рдВрдЪ рдХрд░реЗрдВред'
    },
    {
      id: 3,
      type: 'market',
      priority: 'medium',
      time: '2025-10-24 02:45 PM',
      message_en: 'Soybean price increased by тВ╣120/quintal at Harda mandi. Good time to sell.',
      message_hi: 'рд╣рд░рджрд╛ рдордВрдбреА рдореЗрдВ рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ тВ╣120/рдХреНрд╡рд┐рдВрдЯрд▓ рдмрдврд╝рд╛ред рдмреЗрдЪрдиреЗ рдХрд╛ рдЕрдЪреНрдЫрд╛ рд╕рдордпред'
    },
    {
      id: 4,
      type: 'scheme',
      priority: 'low',
      time: '2025-10-23 10:00 AM',
      message_en: 'PM-KISAN installment will be credited by 31st Oct. Verify your bank details.',
      message_hi: 'PM-KISAN рдХреА рдХрд┐рд╕реНрдд 31 рдЕрдХреНрдЯреВрдмрд░ рддрдХ рдЬрдорд╛ рд╣реЛрдЧреАред рдЕрдкрдиреЗ рдмреИрдВрдХ рд╡рд┐рд╡рд░рдг рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░реЗрдВред'
    }
  ],
  
  diseases: {
    wheat: {
      name: 'Wheat Yellow Rust',
      name_hindi: 'рдЧреЗрд╣реВрдВ рдХрд╛ рдкреАрд▓рд╛ рд░рддреБрдЖ',
      confidence: 92,
      severity: 'Moderate',
      treatment_en: 'Apply sulfur-based fungicide (400g/acre). Spray during cool hours.',
      treatment_hi: 'рд╕рд▓реНрдлрд░ рдЖрдзрд╛рд░рд┐рдд рдлрдлреВрдВрджрдирд╛рд╢рдХ (400g/рдПрдХрдбрд╝) рд▓рдЧрд╛рдПрдВред рдардВрдбреЗ рд╕рдордп рдореЗрдВ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред',
      cost: 'тВ╣400-500/acre'
    },
    soybean: {
      name: 'Soybean Mosaic Virus',
      name_hindi: 'рд╕реЛрдпрд╛рдмреАрди рдореЛрдЬреЗрдХ рд╡рд╛рдпрд░рд╕',
      confidence: 89,
      severity: 'Severe',
      treatment_en: 'Remove infected plants immediately. Control aphids with neem oil.',
      treatment_hi: 'рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЛ рддреБрд░рдВрдд рд╣рдЯрд╛ рджреЗрдВред рдиреАрдо рдХреЗ рддреЗрд▓ рд╕реЗ рдПрдлрд┐рдб рдирд┐рдпрдВрддреНрд░рдг рдХрд░реЗрдВред',
      cost: 'тВ╣300-400/acre'
    },
    cotton: {
      name: 'Cotton Bollworm',
      name_hindi: 'рдХрдкрд╛рд╕ рдХрд╛ рдЧреБрд▓рд╛рдмреА рд╕реБрдВрдбреА',
      confidence: 94,
      severity: 'Severe',
      treatment_en: 'Spray NPV 250 LE/ha or Bt formulation. Monitor pheromone traps.',
      treatment_hi: 'NPV 250 LE/ha рдпрд╛ Bt рдлреЙрд░реНрдореВрд▓реЗрд╢рди рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред рдлреЗрд░реЛрдореЛрди рдЯреНрд░реИрдк рдХреА рдирд┐рдЧрд░рд╛рдиреА рдХрд░реЗрдВред',
      cost: 'тВ╣600-800/acre'
    },
    gram: {
      name: 'Gram Wilt',
      name_hindi: 'рдЪрдиреЗ рдХрд╛ рдЙрдХрдард╛ рд░реЛрдЧ',
      confidence: 87,
      severity: 'Moderate',
      treatment_en: 'Use Trichoderma-treated seeds. Improve drainage. Crop rotation recommended.',
      treatment_hi: 'рдЯреНрд░рд╛рдЗрдХреЛрдбрд░реНрдорд╛ рдЙрдкрдЪрд╛рд░рд┐рдд рдмреАрдЬ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕реБрдзрд╛рд░реЗрдВред',
      cost: 'тВ╣350-450/acre'
    }
  },
  
  marketPrices: [
    { commodity: 'Wheat', commodity_hindi: 'рдЧреЗрд╣реВрдВ', price: 2180, yesterday: 2150, change: +1.4 },
    { commodity: 'Soybean', commodity_hindi: 'рд╕реЛрдпрд╛рдмреАрди', price: 4950, yesterday: 4830, change: +2.5 },
    { commodity: 'Cotton', commodity_hindi: 'рдХрдкрд╛рд╕', price: 6650, yesterday: 6720, change: -1.0 },
    { commodity: 'Gram', commodity_hindi: 'рдЪрдирд╛', price: 5320, yesterday: 5300, change: +0.4 },
    { commodity: 'Garlic', commodity_hindi: 'рд▓рд╣рд╕реБрди', price: 8600, yesterday: 8550, change: +0.6 }
  ],
  
  schemes: [
    {
      name: 'PM-KISAN',
      name_hindi: 'рдкреНрд░рдзрд╛рдирдордВрддреНрд░реА рдХрд┐рд╕рд╛рди рд╕рдореНрдорд╛рди рдирд┐рдзрд┐',
      benefit_en: 'тВ╣6,000 per year in 3 installments',
      benefit_hi: 'тВ╣6,000 рдкреНрд░рддрд┐ рд╡рд░реНрд╖ 3 рдХрд┐рд╕реНрддреЛрдВ рдореЗрдВ',
      eligibility_en: 'All landholding farmers',
      eligibility_hi: 'рд╕рднреА рднреВрдорд┐рдзрд╛рд░реА рдХрд┐рд╕рд╛рди',
      icon: 'ЁЯТ░',
      status: 'not-applied'
    },
    {
      name: 'Fasal Bima Yojana',
      name_hindi: 'рдлрд╕рд▓ рдмреАрдорд╛ рдпреЛрдЬрдирд╛',
      benefit_en: 'Full crop loss coverage, 2% premium for Kharif',
      benefit_hi: 'рдкреВрд░реНрдг рдлрд╕рд▓ рдиреБрдХрд╕рд╛рди рдХрд╡рд░реЗрдЬ, рдЦрд░реАрдл рдХреЗ рд▓рд┐рдП 2% рдкреНрд░реАрдорд┐рдпрдо',
      eligibility_en: 'All farmers with crop insurance',
      eligibility_hi: 'рдлрд╕рд▓ рдмреАрдорд╛ рд╡рд╛рд▓реЗ рд╕рднреА рдХрд┐рд╕рд╛рди',
      icon: 'ЁЯМ╛',
      status: 'not-applied'
    },
    {
      name: 'MP Organic Farming',
      name_hindi: 'рдПрдордкреА рдЬреИрд╡рд┐рдХ рдЦреЗрддреА',
      benefit_en: 'тВ╣10,000 per hectare subsidy',
      benefit_hi: 'тВ╣10,000 рдкреНрд░рддрд┐ рд╣реЗрдХреНрдЯреЗрдпрд░ рд╕рдмреНрд╕рд┐рдбреА',
      eligibility_en: 'Farmers transitioning to organic',
      eligibility_hi: 'рдЬреИрд╡рд┐рдХ рдЦреЗрддреА рдЕрдкрдирд╛рдиреЗ рд╡рд╛рд▓реЗ рдХрд┐рд╕рд╛рди',
      icon: 'ЁЯМ▒',
      status: 'not-applied'
    },
    {
      name: 'Soil Health Card',
      name_hindi: 'рдореГрджрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХрд╛рд░реНрдб',
      benefit_en: 'Free soil testing and fertilizer recommendations',
      benefit_hi: 'рдореБрдлреНрдд рдореГрджрд╛ рдкрд░реАрдХреНрд╖рдг рдФрд░ рдЙрд░реНрд╡рд░рдХ рд╕рд┐рдлрд╛рд░рд┐рд╢',
      eligibility_en: 'All farmers',
      eligibility_hi: 'рд╕рднреА рдХрд┐рд╕рд╛рди',
      icon: 'ЁЯзк',
      status: 'not-applied'
    }
  ],
  
  communityPosts: [
    {
      id: 1,
      author: 'Ramesh Patel',
      village: 'Harda',
      time: '2 hours ago',
      content_en: 'What is the best time for wheat sowing in Harda this season?',
      content_hi: 'рдЗрд╕ рд╕реАрдЬрди рдореЗрдВ рд╣рд░рджрд╛ рдореЗрдВ рдЧреЗрд╣реВрдВ рдХреА рдмреБрд╡рд╛рдИ рдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рдордп рдХреНрдпрд╛ рд╣реИ?',
      replies: 5,
      likes: 8
    },
    {
      id: 2,
      author: 'Sunita Yadav',
      village: 'Khirkiya',
      time: '5 hours ago',
      content_en: 'My income doubled with organic soybean! Thanks to AgroSakha advice.',
      content_hi: 'рдЬреИрд╡рд┐рдХ рд╕реЛрдпрд╛рдмреАрди рд╕реЗ рдореЗрд░реА рдЖрдп рджреЛрдЧреБрдиреА рд╣реЛ рдЧрдИ! AgroSakha рдХреА рд╕рд▓рд╛рд╣ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред',
      replies: 12,
      likes: 18
    },
    {
      id: 3,
      author: 'Mohan Singh',
      village: 'Timarni',
      time: '1 day ago',
      content_en: 'Need urgent market price alerts for cotton. Where to sell?',
      content_hi: 'рдХрдкрд╛рд╕ рдХреЗ рд▓рд┐рдП рддрддреНрдХрд╛рд▓ рдмрд╛рдЬрд╛рд░ рдореВрд▓реНрдп рдЕрд▓рд░реНрдЯ рдЪрд╛рд╣рд┐рдПред рдХрд╣рд╛рдБ рдмреЗрдЪреЗрдВ?',
      replies: 3,
      likes: 5
    },
    {
      id: 4,
      author: 'Kavita Sharma',
      village: 'Sirali',
      time: '1 day ago',
      content_en: 'PM-KISAN payment received today! Thank you AgroSakha for reminders.',
      content_hi: 'PM-KISAN рдХрд╛ рднреБрдЧрддрд╛рди рдЖрдЬ рдкреНрд░рд╛рдкреНрдд рд╣реБрдЖ! рд░рд┐рдорд╛рдЗрдВрдбрд░ рдХреЗ рд▓рд┐рдП AgroSakha рдХрд╛ рдзрдиреНрдпрд╡рд╛рджред',
      replies: 8,
      likes: 12
    },
    {
      id: 5,
      author: 'Rajesh Kumar',
      village: 'Handiya',
      time: '2 days ago',
      content_en: 'Pest attack in my gram crop. AgroSakha disease detection helped identify early!',
      content_hi: 'рдореЗрд░реА рдЪрдиреЗ рдХреА рдлрд╕рд▓ рдореЗрдВ рдХреАрдЯ рдХрд╛ рд╣рдорд▓рд╛ред AgroSakha рд░реЛрдЧ рдкрд╣рдЪрд╛рди рдиреЗ рдЬрд▓реНрджреА рдкрд╣рдЪрд╛рдирдиреЗ рдореЗрдВ рдорджрдж рдХреА!',
      replies: 6,
      likes: 10
    }
  ],
  
  farmActivities: [
    { date: 'Oct 24', activity_en: 'Fertilizer applied to Sector A', activity_hi: 'рд╕реЗрдХреНрдЯрд░ A рдореЗрдВ рдЙрд░реНрд╡рд░рдХ рд▓рдЧрд╛рдпрд╛ рдЧрдпрд╛' },
    { date: 'Oct 20', activity_en: 'Irrigation scheduled', activity_hi: 'рд╕рд┐рдВрдЪрд╛рдИ рдирд┐рд░реНрдзрд╛рд░рд┐рдд' },
    { date: 'Oct 15', activity_en: 'Disease monitoring completed', activity_hi: 'рд░реЛрдЧ рдирд┐рдЧрд░рд╛рдиреА рдкреВрд░реНрдг' }
  ]
};

// Application State
const state = {
  currentLanguage: 'en',
  currentView: 'dashboard',
  isLoggedIn: false,
  currentUser: null,
  offlineMode: false
};

// Utility Functions
function showLoading(text) {
  const overlay = document.getElementById('loading-overlay');
  const loadingText = document.getElementById('loading-text');
  if (text) {
    loadingText.querySelector('span').textContent = text;
  }
  overlay.classList.add('active');
}

function hideLoading() {
  document.getElementById('loading-overlay').classList.remove('active');
}

function showToast(message, duration = 3000) {
  const toast = document.getElementById('toast');
  toast.textContent = message;
  toast.classList.add('show');
  setTimeout(() => toast.classList.remove('show'), duration);
}

function switchLanguage() {
  state.currentLanguage = state.currentLanguage === 'en' ? 'hi' : 'en';
  updateLanguage();
  
  // Update language toggle button
  const langBtn = document.getElementById('lang-toggle-btn');
  if (state.currentLanguage === 'hi') {
    langBtn.innerHTML = '<span class="lang-inactive">EN</span> тЖФя╕П <span class="lang-active">HI</span>';
  } else {
    langBtn.innerHTML = '<span class="lang-active">EN</span> тЖФя╕П <span class="lang-inactive">HI</span>';
  }
  
  showToast(state.currentLanguage === 'hi' ? 'рднрд╛рд╖рд╛ рдмрджрд▓реА рдЧрдИ' : 'Language Changed');
}

function updateLanguage() {
  const elements = document.querySelectorAll('[data-en]');
  elements.forEach(el => {
    const attr = state.currentLanguage === 'en' ? 'data-en' : 'data-hi';
    const text = el.getAttribute(attr);
    if (text) {
      el.textContent = text;
    }
  });
}

function switchView(viewId) {
  // Hide all views
  document.querySelectorAll('.view').forEach(view => view.classList.remove('active'));
  
  // Show selected view
  const targetView = document.getElementById(viewId + '-view');
  if (targetView) {
    targetView.classList.add('active');
    state.currentView = viewId;
  }
  
  // Update bottom nav
  document.querySelectorAll('.nav-item').forEach(item => {
    item.classList.remove('active');
    if (item.dataset.view === viewId) {
      item.classList.add('active');
    }
  });
}

function switchScreen(screenId) {
  document.querySelectorAll('.screen').forEach(screen => screen.classList.remove('active'));
  document.getElementById(screenId).classList.add('active');
}

// Authentication
function initAuth() {
  // Populate village dropdowns
  const signupVillage = document.getElementById('signup-village');
  const farmVillage = document.getElementById('farm-village');
  
  APP_DATA.villages.forEach(village => {
    const option1 = document.createElement('option');
    option1.value = village.name;
    option1.textContent = village.name;
    signupVillage.appendChild(option1);
    
    const option2 = document.createElement('option');
    option2.value = village.name;
    option2.textContent = village.name;
    farmVillage.appendChild(option2);
  });
  
  // Auth tabs
  document.querySelectorAll('.auth-tab').forEach(tab => {
    tab.addEventListener('click', function() {
      document.querySelectorAll('.auth-tab').forEach(t => t.classList.remove('active'));
      document.querySelectorAll('.auth-form').forEach(f => f.classList.remove('active'));
      
      this.classList.add('active');
      const formId = this.dataset.tab + '-form';
      document.getElementById(formId).classList.add('active');
    });
  });
  
  // Login form
  document.getElementById('login-form').addEventListener('submit', function(e) {
    e.preventDefault();
    const phone = document.getElementById('login-phone').value;
    const password = document.getElementById('login-password').value;
    
    // Demo login check
    if (phone === 'demo_farmer' || password === 'harda2025') {
      state.isLoggedIn = true;
      state.currentUser = {
        name: 'Demo Farmer',
        phone: '9876543210',
        village: 'Harda'
      };
      
      document.getElementById('user-name').textContent = state.currentUser.name;
      switchScreen('app-screen');
      showToast('Welcome to AgroSakha!');
      initApp();
    } else {
      showToast('Invalid credentials. Use demo_farmer/harda2025');
    }
  });
  
  // Signup form
  document.getElementById('signup-form').addEventListener('submit', function(e) {
    e.preventDefault();
    const name = document.getElementById('signup-name').value;
    const phone = document.getElementById('signup-phone').value;
    const village = document.getElementById('signup-village').value;
    
    state.isLoggedIn = true;
    state.currentUser = { name, phone, village };
    
    document.getElementById('user-name').textContent = name;
    switchScreen('app-screen');
    showToast('Account created successfully!');
    initApp();
  });
}

// Initialize App Features
function initApp() {
  initNotifications();
  initWeather();
  initDisease();
  initMarket();
  initSchemes();
  initCommunity();
  initFarm();
}

// Notifications
function initNotifications() {
  const notificationBtn = document.getElementById('notification-btn');
  const notificationPanel = document.getElementById('notification-panel');
  const notificationsList = document.getElementById('notifications-list');
  
  notificationBtn.addEventListener('click', () => {
    notificationPanel.classList.toggle('active');
  });
  
  // Close panel when clicking outside
  document.addEventListener('click', (e) => {
    if (!notificationBtn.contains(e.target) && !notificationPanel.contains(e.target)) {
      notificationPanel.classList.remove('active');
    }
  });
  
  // Render notifications
  notificationsList.innerHTML = APP_DATA.notifications.map(notif => `
    <div class="notification-item ${notif.type}">
      <div class="notification-time">
        ${notif.time}
        <span class="notification-priority ${notif.priority}">${notif.priority.toUpperCase()}</span>
      </div>
      <div class="notification-message">
        ${state.currentLanguage === 'en' ? notif.message_en : notif.message_hi}
      </div>
    </div>
  `).join('');
}

// Weather Module
function initWeather() {
  const forecastGrid = document.getElementById('forecast-grid');
  const alertsList = document.getElementById('weather-alerts-list');
  
  // Render forecast
  forecastGrid.innerHTML = APP_DATA.weatherForecast.map(day => `
    <div class="forecast-card">
      <div class="forecast-day">${day.day}</div>
      <div class="forecast-icon">${day.icon}</div>
      <div class="forecast-temps">${day.maxTemp}┬░ / ${day.minTemp}┬░</div>
      <div class="forecast-rain">${day.rain}% rain</div>
    </div>
  `).join('');
  
  // Render weather alerts
  const weatherAlerts = [
    { severity: 'high', message: 'Heavy rainfall warning: 80mm expected in 24 hours' },
    { severity: 'medium', message: 'Good sowing window: Adequate soil moisture detected' }
  ];
  
  alertsList.innerHTML = weatherAlerts.map(alert => `
    <div class="alert-card ${alert.severity}">
      <div class="alert-title">${alert.severity === 'high' ? 'тЪая╕П High Alert' : 'тЪб Weather Update'}</div>
      <div class="alert-message">${alert.message}</div>
    </div>
  `).join('');
}

// Disease Detection Module
function initDisease() {
  const uploadArea = document.getElementById('upload-area');
  const uploadBtn = document.getElementById('upload-btn');
  const imageInput = document.getElementById('disease-image');
  const cropType = document.getElementById('crop-type');
  const diseaseResult = document.getElementById('disease-result');
  
  uploadBtn.addEventListener('click', () => imageInput.click());
  uploadArea.addEventListener('click', () => imageInput.click());
  
  imageInput.addEventListener('change', function(e) {
    if (e.target.files.length > 0) {
      const file = e.target.files[0];
      analyzeDiseaseImage(file, cropType.value);
    }
  });
}

function analyzeDiseaseImage(file, crop) {
  showLoading(state.currentLanguage === 'en' ? 'Analyzing image...' : 'рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг...');
  
  setTimeout(() => {
    hideLoading();
    const disease = APP_DATA.diseases[crop];
    
    document.getElementById('disease-name').textContent = disease.name;
    document.getElementById('disease-name-hindi').textContent = disease.name_hindi;
    document.getElementById('disease-confidence').textContent = disease.confidence + '%';
    document.getElementById('disease-severity').textContent = disease.severity;
    document.getElementById('treatment-text').textContent = 
      state.currentLanguage === 'en' ? disease.treatment_en : disease.treatment_hi;
    document.getElementById('treatment-cost').textContent = disease.cost;
    
    document.getElementById('disease-result').style.display = 'block';
    document.getElementById('disease-result').scrollIntoView({ behavior: 'smooth' });
    
    showToast(state.currentLanguage === 'en' ? 'Analysis Complete!' : 'рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкреВрд░реНрдг!');
  }, 2500);
}

// Market Prices Module
function initMarket() {
  const marketTbody = document.getElementById('market-tbody');
  
  function renderMarketPrices() {
    marketTbody.innerHTML = APP_DATA.marketPrices.map(item => {
      const changeClass = item.change > 0 ? 'positive' : 'negative';
      const changeSymbol = item.change > 0 ? 'тЖС' : 'тЖУ';
      const commodity = state.currentLanguage === 'en' ? item.commodity : item.commodity_hindi;
      
      return `
        <tr>
          <td><strong>${commodity}</strong></td>
          <td>тВ╣${item.price}</td>
          <td class="price-change ${changeClass}">${changeSymbol} ${Math.abs(item.change)}%</td>
        </tr>
      `;
    }).join('');
  }
  
  renderMarketPrices();
  
  document.getElementById('mandi-select').addEventListener('change', () => {
    showLoading(state.currentLanguage === 'en' ? 'Fetching prices...' : 'рдХреАрдорддреЗрдВ рд▓рд╛рдИ рдЬрд╛ рд░рд╣реА рд╣реИрдВ...');
    setTimeout(() => {
      hideLoading();
      renderMarketPrices();
    }, 1000);
  });
}

// Government Schemes Module
function initSchemes() {
  const schemesList = document.getElementById('schemes-list');
  
  schemesList.innerHTML = APP_DATA.schemes.map(scheme => `
    <div class="scheme-card">
      <div class="scheme-header">
        <div class="scheme-icon">${scheme.icon}</div>
        <div class="scheme-title">
          <div class="scheme-name">${scheme.name}</div>
          <div class="scheme-name-hindi">${scheme.name_hindi}</div>
        </div>
      </div>
      <div class="scheme-benefit">
        ${state.currentLanguage === 'en' ? scheme.benefit_en : scheme.benefit_hi}
      </div>
      <div class="scheme-eligibility">
        <strong>${state.currentLanguage === 'en' ? 'Eligibility:' : 'рдкрд╛рддреНрд░рддрд╛:'}</strong>
        ${state.currentLanguage === 'en' ? scheme.eligibility_en : scheme.eligibility_hi}
      </div>
      <div class="scheme-actions">
        <button class="btn btn--primary" onclick="applyScheme('${scheme.name}')">
          <span data-en="Apply Now" data-hi="рдЕрднреА рдЖрд╡реЗрджрди рдХрд░реЗрдВ">Apply Now</span>
        </button>
        <span class="scheme-status ${scheme.status}">
          ${scheme.status === 'not-applied' ? 'Not Applied' : scheme.status}
        </span>
      </div>
    </div>
  `).join('');
}

function applyScheme(schemeName) {
  showToast(state.currentLanguage === 'en' ? 
    `Application submitted for ${schemeName}` : 
    `${schemeName} рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди рдЬрдорд╛ рдХрд┐рдпрд╛ рдЧрдпрд╛`);
}

// Community Module
function initCommunity() {
  const postsList = document.getElementById('posts-list');
  
  function renderPosts() {
    postsList.innerHTML = APP_DATA.communityPosts.map(post => {
      const initials = post.author.split(' ').map(n => n[0]).join('');
      const content = state.currentLanguage === 'en' ? post.content_en : post.content_hi;
      
      return `
        <div class="post-card">
          <div class="post-header">
            <div class="post-avatar">${initials}</div>
            <div class="post-author-info">
              <div class="post-author">${post.author}</div>
              <div class="post-meta">${post.village} тАв ${post.time}</div>
            </div>
          </div>
          <div class="post-content">${content}</div>
          <div class="post-stats">
            <div class="post-stat">ЁЯТм ${post.replies} ${state.currentLanguage === 'en' ? 'replies' : 'рдЬрд╡рд╛рдм'}</div>
            <div class="post-stat">тЭдя╕П ${post.likes} ${state.currentLanguage === 'en' ? 'likes' : 'рд▓рд╛рдЗрдХ'}</div>
          </div>
        </div>
      `;
    }).join('');
  }
  
  renderPosts();
  
  document.querySelectorAll('.filter-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      renderPosts();
    });
  });
}

// Farm Management Module
function initFarm() {
  const farmForm = document.getElementById('farm-form');
  const farmSetup = document.getElementById('farm-setup');
  const farmDashboard = document.getElementById('farm-dashboard');
  
  farmForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const village = document.getElementById('farm-village').value;
    const area = document.getElementById('farm-area').value;
    const irrigation = document.getElementById('farm-irrigation').value;
    const soil = document.getElementById('farm-soil').value;
    
    const selectedCrops = Array.from(document.querySelectorAll('.crops-checkboxes input:checked'))
      .map(cb => cb.value);
    
    showLoading(state.currentLanguage === 'en' ? 'Saving profile...' : 'рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕рд╣реЗрдЬреА рдЬрд╛ рд░рд╣реА рд╣реИ...');
    
    setTimeout(() => {
      hideLoading();
      farmSetup.style.display = 'none';
      farmDashboard.style.display = 'flex';
      
      document.getElementById('farm-info-title').textContent = `${village} Farm`;
      document.getElementById('farm-stat-area').textContent = `${area} hectares`;
      document.getElementById('farm-stat-crops').textContent = selectedCrops.join(', ');
      document.getElementById('farm-stat-soil').textContent = soil;
      
      // Render activities
      const activitiesList = document.getElementById('farm-activities');
      activitiesList.innerHTML = APP_DATA.farmActivities.map(activity => `
        <div class="activity-item">
          <div class="activity-date">${activity.date}</div>
          <div class="activity-text">
            ${state.currentLanguage === 'en' ? activity.activity_en : activity.activity_hi}
          </div>
        </div>
      `).join('');
      
      showToast(state.currentLanguage === 'en' ? 'Farm profile saved!' : 'рдЦреЗрдд рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕рд╣реЗрдЬреА рдЧрдИ!');
    }, 1500);
  });
}

// Navigation
function initNavigation() {
  // Feature cards navigation
  document.querySelectorAll('.feature-card').forEach(card => {
    card.addEventListener('click', function() {
      const view = this.dataset.view;
      switchView(view);
    });
  });
  
  // Bottom navigation
  document.querySelectorAll('.nav-item').forEach(item => {
    item.addEventListener('click', function() {
      const view = this.dataset.view;
      if (view) {
        switchView(view);
      }
    });
  });
  
  // Profile navigation
  document.getElementById('profile-nav').addEventListener('click', () => {
    switchView('farm');
  });
  
  // Back buttons
  document.querySelectorAll('.back-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const target = this.dataset.back;
      switchView(target);
    });
  });
  
  // Language toggle
  document.getElementById('lang-toggle-btn').addEventListener('click', switchLanguage);
  
  // Offline mode toggle
  document.getElementById('offline-mode-toggle').addEventListener('change', function() {
    state.offlineMode = this.checked;
    
    if (state.offlineMode) {
      const banner = document.createElement('div');
      banner.className = 'offline-banner';
      banner.id = 'offline-banner';
      banner.innerHTML = state.currentLanguage === 'en' ? 
        'ЁЯУб Offline Mode - Showing cached data' : 
        'ЁЯУб рдСрдлрд▓рд╛рдЗрди рдореЛрдб - рд╕рдВрдЧреНрд░рд╣реАрдд рдбреЗрдЯрд╛ рджрд┐рдЦрд╛рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ';
      document.querySelector('.app-header').after(banner);
      showToast(state.currentLanguage === 'en' ? 'Offline mode enabled' : 'рдСрдлрд▓рд╛рдЗрди рдореЛрдб рд╕рдХреНрд╖рдо');
    } else {
      const banner = document.getElementById('offline-banner');
      if (banner) banner.remove();
      showToast(state.currentLanguage === 'en' ? 'Online mode enabled' : 'рдСрдирд▓рд╛рдЗрди рдореЛрдб рд╕рдХреНрд╖рдо');
    }
  });
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
  console.log('ЁЯМ╛ AgroSakha - Farmer Alert App Initialized');
  console.log('ЁЯУН Location: Harda, Madhya Pradesh');
  
  initAuth();
  initNavigation();
  
  // Welcome message
  setTimeout(() => {
    const welcomeMsg = state.currentLanguage === 'en' ? 
      'Welcome to AgroSakha! Your farming companion.' : 
      'AgroSakha рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЖрдкрдХрд╛ рдЦреЗрддреА рд╕рд╛рдереАред';
    console.log(welcomeMsg);
  }, 1000);
});